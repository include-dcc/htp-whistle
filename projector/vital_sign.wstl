
// Definition: Construct basic Observation whose response is a code from a local vocabulary (i.e. categorial value)
//
// Arguments:
//  study - This is the full study object created by Whistler
//  encounter - data from the relevant row in the encounter table
//  varname - The variable being recorded
//  value - the value for the given variable
//  units - the units associated with the variable
//  
def VitalSign(study, encounter, varname, value, units) {
    var subject_id: encounter.participantid;
    var varcode: HarmonizeMapped(varname, "encounter");
    var unitcode: HarmonizeMappedFirst(units, "units");

    meta.tag[]: StudyMeta(study);

    category[0].coding[0].system: "http://terminology.hl7.org/CodeSystem/observation-category";
    category[0].coding[0].code: "vital-signs";
    category[0].coding[0].display: "Vital Signs";

    identifier[]: Key_Identifier(study, "Observation", BuildObservationId(study, subject_id, encounter.event_name, varname));
    identifier[0].use: "official";
    subject: Reference_Key_Identifier(study, "Patient", subject_id);
    // This is technically how you are expected to link to ODs, but it isn't working in the current version of FHIR
    // basedOn[].identifier: Key_Identifier(study, "ObservationDefinition", DdVariableId(study.id, "encounter", varname));
    code.text: HarmonizedLocalDisplay(varname, "encounter");
    code.coding[]: varcode;
    code.coding[]: LocalCodeSystemReference(study.id, "encounter", varname);
    if (value ~= "NA") {
        valueQuantity.value (if value ): $ParseFloat(value);
        valueQuantity.unit: units;
        valueQuantity.system: unitcode.system;
        valueQuantity.code: unitcode.code;
    } else {
        valueString: value;
    }
    encounter: Reference_Key_Identifier(study, "Encounter", BuildEncounterId(study, subject_id, encounter.event_name));

    if (encounter.age_at_visit_d?) {
        _effectiveDateTime.extension[0]: AgeAtExtension(study, subject_id, encounter.age_at_visit_d, "days");
    }

    status: "final";
    resourceType: "Observation";
}